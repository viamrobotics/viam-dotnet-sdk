// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: component/movementsensor/v1/movementsensor.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Viam.Component.Movementsensor.V1 {
  public static partial class MovementSensorService
  {
    static readonly string __ServiceName = "viam.component.movementsensor.v1.MovementSensorService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest> __Marshaller_viam_component_movementsensor_v1_GetLinearVelocityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse> __Marshaller_viam_component_movementsensor_v1_GetLinearVelocityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest> __Marshaller_viam_component_movementsensor_v1_GetAngularVelocityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse> __Marshaller_viam_component_movementsensor_v1_GetAngularVelocityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest> __Marshaller_viam_component_movementsensor_v1_GetCompassHeadingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse> __Marshaller_viam_component_movementsensor_v1_GetCompassHeadingResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetOrientationRequest> __Marshaller_viam_component_movementsensor_v1_GetOrientationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetOrientationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetOrientationResponse> __Marshaller_viam_component_movementsensor_v1_GetOrientationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetOrientationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetPositionRequest> __Marshaller_viam_component_movementsensor_v1_GetPositionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetPositionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetPositionResponse> __Marshaller_viam_component_movementsensor_v1_GetPositionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetPositionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetPropertiesRequest> __Marshaller_viam_component_movementsensor_v1_GetPropertiesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetPropertiesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetPropertiesResponse> __Marshaller_viam_component_movementsensor_v1_GetPropertiesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetPropertiesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetAccuracyRequest> __Marshaller_viam_component_movementsensor_v1_GetAccuracyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetAccuracyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetAccuracyResponse> __Marshaller_viam_component_movementsensor_v1_GetAccuracyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetAccuracyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest> __Marshaller_viam_component_movementsensor_v1_GetLinearAccelerationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse> __Marshaller_viam_component_movementsensor_v1_GetLinearAccelerationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Common.V1.DoCommandRequest> __Marshaller_viam_common_v1_DoCommandRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Common.V1.DoCommandRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Common.V1.DoCommandResponse> __Marshaller_viam_common_v1_DoCommandResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Common.V1.DoCommandResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Common.V1.GetGeometriesRequest> __Marshaller_viam_common_v1_GetGeometriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Common.V1.GetGeometriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Common.V1.GetGeometriesResponse> __Marshaller_viam_common_v1_GetGeometriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Common.V1.GetGeometriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Common.V1.GetReadingsRequest> __Marshaller_viam_common_v1_GetReadingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Common.V1.GetReadingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.Common.V1.GetReadingsResponse> __Marshaller_viam_common_v1_GetReadingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.Common.V1.GetReadingsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest, global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse> __Method_GetLinearVelocity = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest, global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLinearVelocity",
        __Marshaller_viam_component_movementsensor_v1_GetLinearVelocityRequest,
        __Marshaller_viam_component_movementsensor_v1_GetLinearVelocityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest, global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse> __Method_GetAngularVelocity = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest, global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAngularVelocity",
        __Marshaller_viam_component_movementsensor_v1_GetAngularVelocityRequest,
        __Marshaller_viam_component_movementsensor_v1_GetAngularVelocityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest, global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse> __Method_GetCompassHeading = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest, global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCompassHeading",
        __Marshaller_viam_component_movementsensor_v1_GetCompassHeadingRequest,
        __Marshaller_viam_component_movementsensor_v1_GetCompassHeadingResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetOrientationRequest, global::Viam.Component.Movementsensor.V1.GetOrientationResponse> __Method_GetOrientation = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetOrientationRequest, global::Viam.Component.Movementsensor.V1.GetOrientationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrientation",
        __Marshaller_viam_component_movementsensor_v1_GetOrientationRequest,
        __Marshaller_viam_component_movementsensor_v1_GetOrientationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetPositionRequest, global::Viam.Component.Movementsensor.V1.GetPositionResponse> __Method_GetPosition = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetPositionRequest, global::Viam.Component.Movementsensor.V1.GetPositionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPosition",
        __Marshaller_viam_component_movementsensor_v1_GetPositionRequest,
        __Marshaller_viam_component_movementsensor_v1_GetPositionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetPropertiesRequest, global::Viam.Component.Movementsensor.V1.GetPropertiesResponse> __Method_GetProperties = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetPropertiesRequest, global::Viam.Component.Movementsensor.V1.GetPropertiesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProperties",
        __Marshaller_viam_component_movementsensor_v1_GetPropertiesRequest,
        __Marshaller_viam_component_movementsensor_v1_GetPropertiesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetAccuracyRequest, global::Viam.Component.Movementsensor.V1.GetAccuracyResponse> __Method_GetAccuracy = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetAccuracyRequest, global::Viam.Component.Movementsensor.V1.GetAccuracyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccuracy",
        __Marshaller_viam_component_movementsensor_v1_GetAccuracyRequest,
        __Marshaller_viam_component_movementsensor_v1_GetAccuracyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest, global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse> __Method_GetLinearAcceleration = new grpc::Method<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest, global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLinearAcceleration",
        __Marshaller_viam_component_movementsensor_v1_GetLinearAccelerationRequest,
        __Marshaller_viam_component_movementsensor_v1_GetLinearAccelerationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Common.V1.DoCommandRequest, global::Viam.Common.V1.DoCommandResponse> __Method_DoCommand = new grpc::Method<global::Viam.Common.V1.DoCommandRequest, global::Viam.Common.V1.DoCommandResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DoCommand",
        __Marshaller_viam_common_v1_DoCommandRequest,
        __Marshaller_viam_common_v1_DoCommandResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Common.V1.GetGeometriesRequest, global::Viam.Common.V1.GetGeometriesResponse> __Method_GetGeometries = new grpc::Method<global::Viam.Common.V1.GetGeometriesRequest, global::Viam.Common.V1.GetGeometriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGeometries",
        __Marshaller_viam_common_v1_GetGeometriesRequest,
        __Marshaller_viam_common_v1_GetGeometriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.Common.V1.GetReadingsRequest, global::Viam.Common.V1.GetReadingsResponse> __Method_GetReadings = new grpc::Method<global::Viam.Common.V1.GetReadingsRequest, global::Viam.Common.V1.GetReadingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReadings",
        __Marshaller_viam_common_v1_GetReadingsRequest,
        __Marshaller_viam_common_v1_GetReadingsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Viam.Component.Movementsensor.V1.MovementsensorReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MovementSensorService</summary>
    [grpc::BindServiceMethod(typeof(MovementSensorService), "BindService")]
    public abstract partial class MovementSensorServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse> GetLinearVelocity(global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse> GetAngularVelocity(global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse> GetCompassHeading(global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetOrientationResponse> GetOrientation(global::Viam.Component.Movementsensor.V1.GetOrientationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetPositionResponse> GetPosition(global::Viam.Component.Movementsensor.V1.GetPositionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetPropertiesResponse> GetProperties(global::Viam.Component.Movementsensor.V1.GetPropertiesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetAccuracyResponse> GetAccuracy(global::Viam.Component.Movementsensor.V1.GetAccuracyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse> GetLinearAcceleration(global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Common.V1.DoCommandResponse> DoCommand(global::Viam.Common.V1.DoCommandRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetGeometries returns the geometries of the component in their current configuration
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Common.V1.GetGeometriesResponse> GetGeometries(global::Viam.Common.V1.GetGeometriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetReadings returns the readings of a sensor of the underlying robot.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.Common.V1.GetReadingsResponse> GetReadings(global::Viam.Common.V1.GetReadingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MovementSensorService</summary>
    public partial class MovementSensorServiceClient : grpc::ClientBase<MovementSensorServiceClient>
    {
      /// <summary>Creates a new client for MovementSensorService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MovementSensorServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MovementSensorService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MovementSensorServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MovementSensorServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MovementSensorServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse GetLinearVelocity(global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLinearVelocity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse GetLinearVelocity(global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLinearVelocity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse> GetLinearVelocityAsync(global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLinearVelocityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse> GetLinearVelocityAsync(global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLinearVelocity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse GetAngularVelocity(global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAngularVelocity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse GetAngularVelocity(global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAngularVelocity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse> GetAngularVelocityAsync(global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAngularVelocityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse> GetAngularVelocityAsync(global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAngularVelocity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse GetCompassHeading(global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCompassHeading(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse GetCompassHeading(global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCompassHeading, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse> GetCompassHeadingAsync(global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCompassHeadingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse> GetCompassHeadingAsync(global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCompassHeading, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetOrientationResponse GetOrientation(global::Viam.Component.Movementsensor.V1.GetOrientationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrientation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetOrientationResponse GetOrientation(global::Viam.Component.Movementsensor.V1.GetOrientationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrientation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetOrientationResponse> GetOrientationAsync(global::Viam.Component.Movementsensor.V1.GetOrientationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrientationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetOrientationResponse> GetOrientationAsync(global::Viam.Component.Movementsensor.V1.GetOrientationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrientation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetPositionResponse GetPosition(global::Viam.Component.Movementsensor.V1.GetPositionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPosition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetPositionResponse GetPosition(global::Viam.Component.Movementsensor.V1.GetPositionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPosition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetPositionResponse> GetPositionAsync(global::Viam.Component.Movementsensor.V1.GetPositionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPositionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetPositionResponse> GetPositionAsync(global::Viam.Component.Movementsensor.V1.GetPositionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPosition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetPropertiesResponse GetProperties(global::Viam.Component.Movementsensor.V1.GetPropertiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProperties(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetPropertiesResponse GetProperties(global::Viam.Component.Movementsensor.V1.GetPropertiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProperties, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetPropertiesResponse> GetPropertiesAsync(global::Viam.Component.Movementsensor.V1.GetPropertiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPropertiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetPropertiesResponse> GetPropertiesAsync(global::Viam.Component.Movementsensor.V1.GetPropertiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProperties, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetAccuracyResponse GetAccuracy(global::Viam.Component.Movementsensor.V1.GetAccuracyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccuracy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetAccuracyResponse GetAccuracy(global::Viam.Component.Movementsensor.V1.GetAccuracyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccuracy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetAccuracyResponse> GetAccuracyAsync(global::Viam.Component.Movementsensor.V1.GetAccuracyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccuracyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetAccuracyResponse> GetAccuracyAsync(global::Viam.Component.Movementsensor.V1.GetAccuracyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccuracy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse GetLinearAcceleration(global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLinearAcceleration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse GetLinearAcceleration(global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLinearAcceleration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse> GetLinearAccelerationAsync(global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLinearAccelerationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse> GetLinearAccelerationAsync(global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLinearAcceleration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Common.V1.DoCommandResponse DoCommand(global::Viam.Common.V1.DoCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoCommand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Common.V1.DoCommandResponse DoCommand(global::Viam.Common.V1.DoCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DoCommand, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Common.V1.DoCommandResponse> DoCommandAsync(global::Viam.Common.V1.DoCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoCommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Common.V1.DoCommandResponse> DoCommandAsync(global::Viam.Common.V1.DoCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DoCommand, null, options, request);
      }
      /// <summary>
      /// GetGeometries returns the geometries of the component in their current configuration
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Common.V1.GetGeometriesResponse GetGeometries(global::Viam.Common.V1.GetGeometriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGeometries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetGeometries returns the geometries of the component in their current configuration
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Common.V1.GetGeometriesResponse GetGeometries(global::Viam.Common.V1.GetGeometriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGeometries, null, options, request);
      }
      /// <summary>
      /// GetGeometries returns the geometries of the component in their current configuration
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Common.V1.GetGeometriesResponse> GetGeometriesAsync(global::Viam.Common.V1.GetGeometriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGeometriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetGeometries returns the geometries of the component in their current configuration
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Common.V1.GetGeometriesResponse> GetGeometriesAsync(global::Viam.Common.V1.GetGeometriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGeometries, null, options, request);
      }
      /// <summary>
      /// GetReadings returns the readings of a sensor of the underlying robot.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Common.V1.GetReadingsResponse GetReadings(global::Viam.Common.V1.GetReadingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReadings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetReadings returns the readings of a sensor of the underlying robot.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.Common.V1.GetReadingsResponse GetReadings(global::Viam.Common.V1.GetReadingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetReadings, null, options, request);
      }
      /// <summary>
      /// GetReadings returns the readings of a sensor of the underlying robot.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Common.V1.GetReadingsResponse> GetReadingsAsync(global::Viam.Common.V1.GetReadingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReadingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetReadings returns the readings of a sensor of the underlying robot.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.Common.V1.GetReadingsResponse> GetReadingsAsync(global::Viam.Common.V1.GetReadingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetReadings, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MovementSensorServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MovementSensorServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MovementSensorServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetLinearVelocity, serviceImpl.GetLinearVelocity)
          .AddMethod(__Method_GetAngularVelocity, serviceImpl.GetAngularVelocity)
          .AddMethod(__Method_GetCompassHeading, serviceImpl.GetCompassHeading)
          .AddMethod(__Method_GetOrientation, serviceImpl.GetOrientation)
          .AddMethod(__Method_GetPosition, serviceImpl.GetPosition)
          .AddMethod(__Method_GetProperties, serviceImpl.GetProperties)
          .AddMethod(__Method_GetAccuracy, serviceImpl.GetAccuracy)
          .AddMethod(__Method_GetLinearAcceleration, serviceImpl.GetLinearAcceleration)
          .AddMethod(__Method_DoCommand, serviceImpl.DoCommand)
          .AddMethod(__Method_GetGeometries, serviceImpl.GetGeometries)
          .AddMethod(__Method_GetReadings, serviceImpl.GetReadings).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MovementSensorServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetLinearVelocity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetLinearVelocityRequest, global::Viam.Component.Movementsensor.V1.GetLinearVelocityResponse>(serviceImpl.GetLinearVelocity));
      serviceBinder.AddMethod(__Method_GetAngularVelocity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetAngularVelocityRequest, global::Viam.Component.Movementsensor.V1.GetAngularVelocityResponse>(serviceImpl.GetAngularVelocity));
      serviceBinder.AddMethod(__Method_GetCompassHeading, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetCompassHeadingRequest, global::Viam.Component.Movementsensor.V1.GetCompassHeadingResponse>(serviceImpl.GetCompassHeading));
      serviceBinder.AddMethod(__Method_GetOrientation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetOrientationRequest, global::Viam.Component.Movementsensor.V1.GetOrientationResponse>(serviceImpl.GetOrientation));
      serviceBinder.AddMethod(__Method_GetPosition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetPositionRequest, global::Viam.Component.Movementsensor.V1.GetPositionResponse>(serviceImpl.GetPosition));
      serviceBinder.AddMethod(__Method_GetProperties, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetPropertiesRequest, global::Viam.Component.Movementsensor.V1.GetPropertiesResponse>(serviceImpl.GetProperties));
      serviceBinder.AddMethod(__Method_GetAccuracy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetAccuracyRequest, global::Viam.Component.Movementsensor.V1.GetAccuracyResponse>(serviceImpl.GetAccuracy));
      serviceBinder.AddMethod(__Method_GetLinearAcceleration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Component.Movementsensor.V1.GetLinearAccelerationRequest, global::Viam.Component.Movementsensor.V1.GetLinearAccelerationResponse>(serviceImpl.GetLinearAcceleration));
      serviceBinder.AddMethod(__Method_DoCommand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Common.V1.DoCommandRequest, global::Viam.Common.V1.DoCommandResponse>(serviceImpl.DoCommand));
      serviceBinder.AddMethod(__Method_GetGeometries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Common.V1.GetGeometriesRequest, global::Viam.Common.V1.GetGeometriesResponse>(serviceImpl.GetGeometries));
      serviceBinder.AddMethod(__Method_GetReadings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.Common.V1.GetReadingsRequest, global::Viam.Common.V1.GetReadingsResponse>(serviceImpl.GetReadings));
    }

  }
}
#endregion
